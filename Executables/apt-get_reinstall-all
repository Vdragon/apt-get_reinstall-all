#!/usr/bin/env bash
# 		宣告執行 script 程式用的殼程式(shell)
################## Header block ##################
# Script程式名稱
# Script Name
# 	apt-get_reinstall-all
# 著作權宣告
# Copyright Declaration
# 	Ｖ字龍(Vdragon) <pika1021@gmail.com> (c) 2014
# 授權條款宣告
# License Declaration
# 	GNU Lesser General Public License version 3.0 or later
# 	http://www.gnu.org/licenses/lgpl.html
# 傳回值定義
# Return Value Definition
# 	0
# 		正常結束
# 軟體設定
# Software configurations
# 	Setup how many packages install per `apt-get install` command, default 100
packages_per_install=100

# 已知問題
# Known Issues
# 	Known issues is now tracked on GitHub
# 	
# 修訂紀錄
# Changelog
# 	Changelog is now tracked using Git repostiory commit log
# 	
############## Header block ended ##############

######## Included files ########

######## Included files ended ########

######## File scope variable definitions ########
# idea from http://www.kfirlavi.com/blog/2012/11/14/defensive-bash-programming/
readonly PROGRAM_NAME="$(basename $0)"
readonly PROGRAM_DIRECTORY="$(readlink -m $(dirname $0))"
readonly PROGRAM_ARGUMENT_LIST="$@"
readonly PROGRAM_ARGUMENT_NUMBER_ORIGINAL=$#

######## File scope variable definitions ended ########

######## Program ########
function printUsage(){
	printf "Usage:\n"
	printf "	# ${PROGRAM_NAME}\n"
	return
}

# main function, program entry point
# idea from http://www.kfirlavi.com/blog/2012/11/14/defensive-bash-programming/
function main() {
	if [ ${PROGRAM_ARGUMENT_NUMBER_ORIGINAL} -gt 0 ]; then
		printUsage
		exit 0
	else
	set +x
		LANGUAGE=en dpkg --get-selections \
			| grep '[[:space:]]install' \
			| awk '{print $1}' \
			| xargs --max-args=${packages_per_install}\
				apt-get_reinstall-all_installAndCleanPackages
		exit $?
	set +x
	fi
}
main
######## Program ended ########
